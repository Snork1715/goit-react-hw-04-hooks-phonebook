{"version":3,"sources":["components/Form/Form.js","components/ContactItem/ContactItem.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js"],"names":["Form","onAdd","useState","name","setName","number","setNumber","handleChange","event","currentTarget","value","onSubmit","preventDefault","className","type","onChange","pattern","title","required","ContactItem","id","onDelete","onClick","ContactsList","contacts","onDeleteContact","map","contact","Filter","placeholder","Phonebook","setContacts","filter","setFilter","useEffect","localContacts","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","normalizedFilter","toLowerCase","filteredContacts","includes","newContact","shortid","generate","dublicateContact","find","alert","prev","contactId","prevContacts","i","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1aadabdd.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport \"./Form.css\";\r\n\r\nexport default function Form({ onAdd }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    onAdd(name, number);\r\n\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"contact-form\">\r\n      <label>Имя</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        onChange={handleChange}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n      <label>Телефон</label>\r\n      <input\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        value={number}\r\n        onChange={handleChange}\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n      />\r\n\r\n      <button type=\"submit\" className=\"form_add-button\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./ContactItem.css\";\r\n\r\nconst ContactItem = ({ name, id, number, onDelete }) => {\r\n  return (\r\n    <li className=\"contact-item\">\r\n      {name} {number}\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => onDelete(id)}\r\n        className=\"contact-item_button\"\r\n      >\r\n        Удалить\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactItem;\r\n","import React from \"react\";\r\nimport ContactItem from \"../ContactItem\";\r\nimport \"./ContactsList.css\";\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className=\"phonebook-contacts_list\">\r\n      {contacts.map((contact) => (\r\n        <ContactItem\r\n          key={contact.id}\r\n          id={contact.id}\r\n          name={contact.name}\r\n          number={contact.number}\r\n          onDelete={onDeleteContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import React from 'react';\r\nimport './Filter.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n    return (\r\n        <label>\r\n            Поиск контактов:\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Введите имя для поиска\"\r\n                name=\"filter\"\r\n                value={value}\r\n                onChange={onChange}\r\n                className=\"filter-input\"\r\n            />\r\n        </label>\r\n    );\r\n};\r\n\r\nexport default Filter;\r\n","import { useState, useEffect } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport Form from \"./components/Form\";\r\nimport ContactsList from \"./components/ContactsList\";\r\nimport Filter from \"./components/Filter\";\r\nimport \"./App.css\";\r\n\r\nexport default function Phonebook() {\r\n  const [contacts, setContacts] = useState([\r\n    {\r\n      id: \"id-1\",\r\n      name: \"Rosie Simpson\",\r\n      number: \"459-12-56\",\r\n    },\r\n    {\r\n      id: \"id-2\",\r\n      name: \"Hermione Kline\",\r\n      number: \"443-89-12\",\r\n    },\r\n    {\r\n      id: \"id-3\",\r\n      name: \"Eden Clements\",\r\n      number: \"645-17-79\",\r\n    },\r\n    {\r\n      id: \"id-4\",\r\n      name: \"Annie Copeland\",\r\n      number: \"227-91-26\",\r\n    },\r\n  ]);\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const localContacts = localStorage.getItem(\"contacts\");\r\n    const parsedContacts = JSON.parse(localContacts);\r\n    if (parsedContacts) {\r\n      setContacts(parsedContacts);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const addContact = (name, number) => {\r\n    const newContact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    const dublicateContact = contacts.find(\r\n      (contact) => contact.name === newContact.name\r\n    );\r\n\r\n    if (dublicateContact) {\r\n      alert(`Контакт ${dublicateContact.name} уже существует`);\r\n    } else {\r\n      setContacts((prev) => [newContact, ...prev]);\r\n    }\r\n  };\r\n\r\n  const filterContacts = (event) => {\r\n    const { value } = event.currentTarget;\r\n    setFilter(value);\r\n  };\r\n\r\n  const deleteContact = (contactId) => {\r\n    setContacts((prevContacts) =>\r\n      prevContacts.filter((i) => i.id !== contactId)\r\n    );\r\n  };\r\n\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  const filteredContacts = contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n  return (\r\n    <div className=\"phonebook-warper\">\r\n      <div className=\"phonebook-form\">\r\n        <h1>Phonebook</h1>\r\n        <Form onAdd={addContact} />\r\n      </div>\r\n      <div className=\"phonebook-contacts\">\r\n        <h2>Contacts</h2>\r\n        <Filter value={filter} onChange={filterContacts} />\r\n        <ContactsList\r\n          contacts={filteredContacts}\r\n          onDeleteContact={deleteContact}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}